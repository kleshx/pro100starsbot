const { showMainMenu, showSubscriptionMenu } = require('../services/telegramService');
const { getUser, saveUser, getUserByRefCode } = require('../database/db');

async function handleStart(ctx) {
  const userId = ctx.from.id;
  let user = getUser(userId);

  if (!user) {
    user = {
      id: userId,
      username: ctx.from.username || '',
      firstName: ctx.from.first_name,
      lastName: ctx.from.last_name || '',
      subscribed: false,
      stars: 0,
      referralCode: `ref_${userId}_${Math.random().toString(36).substr(2, 5)}`,
      invitedBy: null,
      invitedUsers: [],
      paidReferrals: 0,
      level: 0,
      joinDate: new Date().toISOString(),
      lastActivity: new Date().toISOString()
    };

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏
    const startPayload = ctx.startPayload;
    if (startPayload && startPayload.startsWith('ref_')) {
      user.invitedBy = startPayload;
      const referrer = getUserByRefCode(startPayload);
      
      if (referrer) {
        referrer.invitedUsers.push(userId);
        saveUser(referrer);
        
        try {
          await ctx.telegram.sendMessage(
            referrer.id,
            `üéâ –ù–æ–≤—ã–π —Ä–µ—Ñ–µ—Ä–∞–ª! @${ctx.from.username || userId} –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –ø–æ –≤–∞—à–µ–π —Å—Å—ã–ª–∫–µ!`
          );
        } catch (e) {
          console.error('Error sending notification:', e);
        }
      }
    }

    saveUser(user);
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –æ–ø–ª–∞—Ç–∏–≤—à–∏–µ –∏–ª–∏ –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–∏–µ 3 –æ–ø–ª–∞—Ç–∏–≤—à–∏—Ö)
  const hasAccess = user.subscribed || user.paidReferrals >= 3;
  if (!hasAccess) {
    await showSubscriptionMenu(ctx, user);
  } else {
    await showMainMenu(ctx, user);
  }
}

async function handleInviteFriends(ctx) {
  const user = getUser(ctx.from.id);
  await ctx.editMessageText(`
<b>üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –¥—Ä—É–∑–µ–π</b>

–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ 3 –¥—Ä—É–∑–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –æ–ø–ª–∞—Ç—è—Ç –ø–æ–¥–ø–∏—Å–∫—É, –∏ –ø–æ–ª—É—á–∏—Ç–µ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –±–æ—Ç—É!

–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:
https://t.me/pro100starsbot?start=${user.referralCode}

–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: ${user.invitedUsers.length}
–ò–∑ –Ω–∏—Ö –æ–ø–ª–∞—Ç–∏–ª–∏: ${user.paidReferrals}/3

–ó–∞ –∫–∞–∂–¥–æ–≥–æ –æ–ø–ª–∞—Ç–∏–≤—à–µ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 50 Stars!
  `, {
    reply_markup: {
      inline_keyboard: [
        [{
          text: "üì§ –ü–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Å—ã–ª–∫–æ–π",
          switch_inline_query: `–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ pro100stars! –ü–æ–ª—É—á–∏ –±–æ–Ω—É—Å –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é: https://t.me/pro100starsbot?start=${user.referralCode}`
        }],
        [{
          text: "üîô –ù–∞–∑–∞–¥",
          callback_data: "back_to_subscribe"
        }]
      ]
    },
    parse_mode: 'HTML'
  });
}

module.exports = {
  handleStart,
  handleInviteFriends
};